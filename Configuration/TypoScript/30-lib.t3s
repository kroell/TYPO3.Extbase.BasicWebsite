lib {
	navigation = COA
	navigation {
		stdWrap.wrap = <ul class="nav navbar-nav main-nav">|</ul>
		5 = TEXT
		5 {
			value = <li>
			override {
				cObject = TEXT
				cObject {
					value = <li class="active">
				}
				if {
					value.data = TSFE:id
					equals = 1
				}
			}
		}

#		10 = TEXT
#		10 {
#			value = Home
#			data =  levelfield: 0, nav_title // leveltitle: 0
#			stdWrap {
#				typolink.parameter = 1
#				wrap = |</li>
#			}
#		}

		20 = HMENU
		20 {
			special = directory
			special.value = 1

			1 = TMENU
			1 {
				expAll = 1
				// wrap =  <ul class="nav navbar-nav">|</ul>
				NO = 1
				NO {
					wrapItemAndSub = <li>|</li>
					stdWrap.htmlSpecialChars = 1
				}
				CUR < .NO
				CUR {
					wrapItemAndSub = <li class="active">|</li>
				}
				IFSUB < .NO
				IFSUB {
					wrapItemAndSub = <li class="dropdown">|</li>
					doNotLinkIt = 1
					linkWrap = <a data-toggle="dropdown" class="dropdown-toggle" href="#">| <b class="caret"></b></a>
				}
			}
			2 < .1
			2 {
				wrap = <ul class="dropdown-menu">|</ul>
				IFSUB >
			}
		}
	}
    # Sidebar
	sidebarNav = HMENU
	sidebarNav {
		entryLevel = 1
		1 = TMENU
		1 {
			wrap =  <div class="list-group">|</div>
			NO = 1
			NO {
				stdWrap.htmlSpecialChars = 1
				ATagParams = class="list-group-item"
			}
			CUR < .NO
			CUR {
				ATagParams = class="list-group-item active"
			}
		}
	}
    # Breadcrumb
    breadcrumb = HMENU
    breadcrumb {
        special = rootline
        1 = TMENU
        1.wrap = <ol class="breadcrumb">|</ol>
        1.noBlur = 1
        1.NO.linkWrap = |
        1.NO.allStdWrap.dataWrap = <li id="{field:title}">|</li>
        1.NO {
            ATagTitle.field = nav_title // title
        }
        1.NO {
            1 = COA
            1.10 = TEXT
            1.10 {
                field = nav_title // title
            }
            #1.stdWrap.replacement.10 {
            #  search.char = 13
            #  replace = <br/>
            #}
            1.stdWrap.replacement.20 {
                search = '
                replace = &shy;
            }
            stdWrap.field >
            stdWrap.cObject = TEXT
            stdWrap.cObject < .1
        }
        1.CUR = 1
        #1.CUR < .1.NO
        1.CUR {
            doNotLinkIt = 1
            stdWrap.wrap = |
            linkWrap = <li class="active">|</li>
        }
    }
    # KE Searchbox
    searchbox = COA_INT
    searchbox {
        10 < plugin.tx_kesearch_pi1

        # result page
        10.resultPage = 9

        # static or ajax mode
        10.renderMethod = static

        # HTML template and CSS file
        10.templateFile = EXT:ke_search_hooks/res/ke_search_custom_template_pi1.tpl
        10.cssFile = EXT:ke_search_hooks/res/ke_search_custom_pi1.css

        # Content element (search box plugin) from which additional
        # configuration should be loaded (UID of content element).
        # Important: If you have two search boxes on your result page
        # (eg. in the top and in the left area), you should set this value!
        # 10.loadFlexformsFromOtherCE = 123456
    }
}

